-- MySQL Script generated by MySQL Workbench
-- Fri Mar  6 13:33:45 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema vets_database
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema vets_database
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `vets_database` DEFAULT CHARACTER SET utf8 ;
USE `vets_database` ;

-- -----------------------------------------------------
-- Table `vets_database`.`Role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vets_database`.`Role` (
  `Id` INT NOT NULL,
  `Name` VARCHAR(45) NULL,
  PRIMARY KEY (`Id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vets_database`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vets_database`.`User` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Email` VARCHAR(45) NOT NULL,
  `Password` VARCHAR(60) NOT NULL,
  `FirstName` VARCHAR(45) NULL,
  `LastName` VARCHAR(45) NULL,
  `Active` TINYINT NULL,
  `CreatedDate` DATETIME NULL,
  `PhoneNumber` VARCHAR(45) NULL,
  `Role_Id` INT NOT NULL,
  `Username` VARCHAR(45) NULL,
  PRIMARY KEY (`Id`),
  UNIQUE INDEX `Email_UNIQUE` (`Email` ASC),
  INDEX `fk_User_Role1_idx` (`Role_Id` ASC),
  UNIQUE INDEX `Id_UNIQUE` (`Id` ASC),
  UNIQUE INDEX `Username_UNIQUE` (`Username` ASC),
  CONSTRAINT `fk_User_Role1`
    FOREIGN KEY (`Role_Id`)
    REFERENCES `vets_database`.`Role` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vets_database`.`Plan`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vets_database`.`Plan` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Title` TINYTEXT NOT NULL,
  `CreatedDate` DATETIME NULL,
  PRIMARY KEY (`Id`),
  UNIQUE INDEX `Id_UNIQUE` (`Id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vets_database`.`ContentCycle`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vets_database`.`ContentCycle` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Cycle_Number` INT NOT NULL,
  `CreatedDate` DATETIME NOT NULL,
  `Plan_Id` INT NOT NULL,
  PRIMARY KEY (`Id`),
  UNIQUE INDEX `Id_UNIQUE` (`Id` ASC),
  INDEX `fk_ContentCycle_Plan1_idx` (`Plan_Id` ASC),
  CONSTRAINT `fk_ContentCycle_Plan1`
    FOREIGN KEY (`Plan_Id`)
    REFERENCES `vets_database`.`Plan` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vets_database`.`Section`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vets_database`.`Section` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Title` TINYTEXT NOT NULL,
  `Passage_Paraphrased` TEXT NULL,
  `Passage_Reference` TEXT NULL,
  `Additional_Thoughts` TEXT NULL,
  `Order` INT NULL,
  `CreatedDate` DATETIME NULL,
  `ContentCycle_Id` INT NOT NULL,
  `Main_Idea` TEXT NULL,
  `Song_Link` TINYTEXT NULL,
  PRIMARY KEY (`Id`),
  UNIQUE INDEX `Id_UNIQUE` (`Id` ASC),
  INDEX `fk_Section_ContentCycle1_idx` (`ContentCycle_Id` ASC),
  CONSTRAINT `fk_Section_ContentCycle1`
    FOREIGN KEY (`ContentCycle_Id`)
    REFERENCES `vets_database`.`ContentCycle` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vets_database`.`Journal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vets_database`.`Journal` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Title` VARCHAR(45) NULL,
  `Body` TEXT NULL,
  `CreatedDate` DATETIME NULL,
  `User_Id` INT NOT NULL,
  `Section_Id` INT NULL,
  PRIMARY KEY (`Id`),
  INDEX `fk_Journal_User1_idx` (`User_Id` ASC),
  INDEX `fk_Journal_Section_idx` (`Section_Id` ASC),
  CONSTRAINT `fk_Journal_User1`
    FOREIGN KEY (`User_Id`)
    REFERENCES `vets_database`.`User` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Journal_Section`
    FOREIGN KEY (`Section_Id`)
    REFERENCES `vets_database`.`Section` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vets_database`.`PrayerRequest`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vets_database`.`PrayerRequest` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Title` VARCHAR(45) NULL,
  `Body` TINYTEXT NULL,
  `Resolved` TINYINT NULL,
  `IsPrivate` TINYINT NULL,
  `CreatedDate` DATETIME NULL,
  `User_Id` INT NOT NULL,
  `Frequency` INT NULL,
  `Section_Id` INT NULL,
  PRIMARY KEY (`Id`),
  INDEX `fk_PrayerRequest_User1_idx` (`User_Id` ASC),
  INDEX `fk_PrayerRequest_Section1_idx` (`Section_Id` ASC),
  CONSTRAINT `fk_PrayerRequest_User1`
    FOREIGN KEY (`User_Id`)
    REFERENCES `vets_database`.`User` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PrayerRequest_Section1`
    FOREIGN KEY (`Section_Id`)
    REFERENCES `vets_database`.`Section` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vets_database`.`Tag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vets_database`.`Tag` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NULL,
  `Active` TINYINT NULL,
  PRIMARY KEY (`Id`),
  UNIQUE INDEX `Name_UNIQUE` (`Name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vets_database`.`Group`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vets_database`.`Group` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NULL,
  `CreatedDate` DATETIME NULL,
  `Active` TINYINT(1) NULL DEFAULT 1,
  `Plan_Id` INT NOT NULL,
  PRIMARY KEY (`Id`),
  INDEX `fk_Group_Plan1_idx` (`Plan_Id` ASC),
  CONSTRAINT `fk_Group_Plan1`
    FOREIGN KEY (`Plan_Id`)
    REFERENCES `vets_database`.`Plan` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vets_database`.`Message`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vets_database`.`Message` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Body` TEXT NULL,
  `CreatedDate` VARCHAR(45) NULL,
  `Group_Id` INT NOT NULL,
  `User_Id` INT NOT NULL,
  PRIMARY KEY (`Id`),
  INDEX `fk_Message_Group1_idx` (`Group_Id` ASC),
  INDEX `fk_Message_User1_idx` (`User_Id` ASC),
  CONSTRAINT `fk_Message_Group1`
    FOREIGN KEY (`Group_Id`)
    REFERENCES `vets_database`.`Group` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Message_User1`
    FOREIGN KEY (`User_Id`)
    REFERENCES `vets_database`.`User` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vets_database`.`Section_has_Tag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vets_database`.`Section_has_Tag` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Section_Id` INT NOT NULL,
  `Tag_Id` INT NOT NULL,
  PRIMARY KEY (`Id`),
  INDEX `fk_Section_has_Tag_Tag1_idx` (`Tag_Id` ASC),
  INDEX `fk_Section_has_Tag_Section1_idx` (`Section_Id` ASC),
  UNIQUE INDEX `Id_UNIQUE` (`Id` ASC),
  CONSTRAINT `fk_Section_has_Tag_Section1`
    FOREIGN KEY (`Section_Id`)
    REFERENCES `vets_database`.`Section` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Section_has_Tag_Tag1`
    FOREIGN KEY (`Tag_Id`)
    REFERENCES `vets_database`.`Tag` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vets_database`.`User_has_Plan`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vets_database`.`User_has_Plan` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `User_Id` INT NOT NULL,
  `Plan_Id` INT NOT NULL,
  `Current_Section_Id` INT NOT NULL,
  `Active` TINYINT NULL DEFAULT 0,
  `Times_Completed` INT NULL DEFAULT 0,
  PRIMARY KEY (`Id`),
  INDEX `fk_User_has_Cycle_User1_idx` (`User_Id` ASC),
  UNIQUE INDEX `Id_UNIQUE` (`Id` ASC),
  INDEX `fk_User_has_Plan_Plan1_idx` (`Plan_Id` ASC),
  INDEX `fk_User_has_Plan_Section1_idx` (`Current_Section_Id` ASC),
  CONSTRAINT `fk_User_has_Cycle_User1`
    FOREIGN KEY (`User_Id`)
    REFERENCES `vets_database`.`User` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Plan_Plan1`
    FOREIGN KEY (`Plan_Id`)
    REFERENCES `vets_database`.`Plan` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Plan_Section1`
    FOREIGN KEY (`Current_Section_Id`)
    REFERENCES `vets_database`.`Section` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vets_database`.`GroupRole`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vets_database`.`GroupRole` (
  `Id` INT NOT NULL,
  `Name` VARCHAR(45) NULL,
  PRIMARY KEY (`Id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vets_database`.`User_has_Group`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vets_database`.`User_has_Group` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Group_Id` INT NOT NULL,
  `GroupRole_Id` INT NOT NULL,
  `User_has_Plan_Id` INT NOT NULL,
  `Active` TINYINT NULL DEFAULT 0,
  INDEX `fk_User_has_Group_Group1_idx` (`Group_Id` ASC),
  INDEX `fk_User_has_Group_GroupRole1_idx` (`GroupRole_Id` ASC),
  PRIMARY KEY (`Id`),
  UNIQUE INDEX `Id_UNIQUE` (`Id` ASC),
  INDEX `fk_User_has_Group_User_has_Plan1_idx` (`User_has_Plan_Id` ASC),
  CONSTRAINT `fk_User_has_Group_Group1`
    FOREIGN KEY (`Group_Id`)
    REFERENCES `vets_database`.`Group` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Group_GroupRole1`
    FOREIGN KEY (`GroupRole_Id`)
    REFERENCES `vets_database`.`GroupRole` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Group_User_has_Plan1`
    FOREIGN KEY (`User_has_Plan_Id`)
    REFERENCES `vets_database`.`User_has_Plan` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vets_database`.`Prayer_has_Tag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vets_database`.`Prayer_has_Tag` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Tag_Id` INT NOT NULL,
  `PrayerRequest_Id` INT NOT NULL,
  PRIMARY KEY (`Id`),
  UNIQUE INDEX `Id_UNIQUE` (`Id` ASC),
  INDEX `fk_Prayer_has_Tag_Tag1_idx` (`Tag_Id` ASC),
  INDEX `fk_Prayer_has_Tag_PrayerRequest1_idx` (`PrayerRequest_Id` ASC),
  CONSTRAINT `fk_Prayer_has_Tag_Tag1`
    FOREIGN KEY (`Tag_Id`)
    REFERENCES `vets_database`.`Tag` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Prayer_has_Tag_PrayerRequest1`
    FOREIGN KEY (`PrayerRequest_Id`)
    REFERENCES `vets_database`.`PrayerRequest` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vets_database`.`Notification_Type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vets_database`.`Notification_Type` (
  `Id` INT NOT NULL,
  `Name` VARCHAR(45) NULL,
  `Ion_Icon` VARCHAR(45) NULL,
  PRIMARY KEY (`Id`),
  UNIQUE INDEX `Id_UNIQUE` (`Id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vets_database`.`Notification`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vets_database`.`Notification` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Title` TINYTEXT NULL,
  `Body` TEXT NULL,
  `Completed` TINYINT NULL DEFAULT 0,
  `Read` TINYINT NULL DEFAULT 0,
  `CreatedDate` DATETIME NULL,
  `To_User_Id` INT NOT NULL,
  `From_User_Id` INT NOT NULL,
  `Notification_Type_Id` INT NOT NULL,
  `Group_Id` INT NULL,
  PRIMARY KEY (`Id`),
  UNIQUE INDEX `Id_UNIQUE` (`Id` ASC),
  INDEX `fk_Notification_User1_idx` (`To_User_Id` ASC),
  INDEX `fk_Notification_Group1_idx` (`Group_Id` ASC),
  INDEX `fk_Notification_Notification_Type1_idx` (`Notification_Type_Id` ASC),
  INDEX `fk_Notification_User2_idx` (`From_User_Id` ASC),
  CONSTRAINT `fk_Notification_User1`
    FOREIGN KEY (`To_User_Id`)
    REFERENCES `vets_database`.`User` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Notification_Group1`
    FOREIGN KEY (`Group_Id`)
    REFERENCES `vets_database`.`Group` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Notification_Notification_Type1`
    FOREIGN KEY (`Notification_Type_Id`)
    REFERENCES `vets_database`.`Notification_Type` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Notification_User2`
    FOREIGN KEY (`From_User_Id`)
    REFERENCES `vets_database`.`User` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `vets_database`.`Role`
-- -----------------------------------------------------
START TRANSACTION;
USE `vets_database`;
INSERT INTO `vets_database`.`Role` (`Id`, `Name`) VALUES (1, 'Admin');
INSERT INTO `vets_database`.`Role` (`Id`, `Name`) VALUES (2, 'Standard');

COMMIT;


-- -----------------------------------------------------
-- Data for table `vets_database`.`GroupRole`
-- -----------------------------------------------------
START TRANSACTION;
USE `vets_database`;
INSERT INTO `vets_database`.`GroupRole` (`Id`, `Name`) VALUES (1, 'Admin');
INSERT INTO `vets_database`.`GroupRole` (`Id`, `Name`) VALUES (2, 'Standard');

COMMIT;


-- -----------------------------------------------------
-- Data for table `vets_database`.`Notification_Type`
-- -----------------------------------------------------
START TRANSACTION;
USE `vets_database`;
INSERT INTO `vets_database`.`Notification_Type` (`Id`, `Name`, `Ion_Icon`) VALUES (1, 'Join Group Request', 'help');
INSERT INTO `vets_database`.`Notification_Type` (`Id`, `Name`, `Ion_Icon`) VALUES (2, 'Accepted to Group', 'checkmark');
INSERT INTO `vets_database`.`Notification_Type` (`Id`, `Name`, `Ion_Icon`) VALUES (3, 'Rejected from Group', 'close');
INSERT INTO `vets_database`.`Notification_Type` (`Id`, `Name`, `Ion_Icon`) VALUES (4, 'Nudge', 'alert');
INSERT INTO `vets_database`.`Notification_Type` (`Id`, `Name`, `Ion_Icon`) VALUES (5, 'Removed from Group', 'close');

COMMIT;

